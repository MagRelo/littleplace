"use strict";function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}angular.module("littleplaceApp",["littleplaceApp.auth","littleplaceApp.admin","littleplaceApp.constants","ngCookies","ngResource","ngSanitize","ui.router","ui.bootstrap","uiGmapgoogle-maps","geolocation","google.places"]).config(["$urlRouterProvider","$locationProvider","uiGmapGoogleMapApiProvider",function(a,b,c){a.otherwise("/"),b.html5Mode(!0),c.configure({key:"AIzaSyAFnV6Bxm7kMxIw8Sad_B1dIAA7CMK2kWU",v:"3.20",libraries:"weather,geometry,visualization"})}]),angular.module("littleplaceApp.admin",["littleplaceApp.auth","ui.router"]),angular.module("littleplaceApp.auth",["littleplaceApp.constants","littleplaceApp.util","ngCookies","ui.router"]).config(["$httpProvider",function(a){a.interceptors.push("authInterceptor")}]),angular.module("littleplaceApp.util",[]),function(){function a(a,b,c,d,e,f,g){var h=f.safeCb,i={},j=e.userRoles||[];c.get("token")&&"/logout"!==a.path()&&(i=g.get());var k={login:function(a,e){var f=a.email,j=a.password;return b.post("/auth/local",{email:f,password:j}).then(function(a){return c.put("token",a.data.token),i=g.get(),i.$promise}).then(function(a){return h(e)(null,a),a})["catch"](function(a){return k.logout(),h(e)(a.data),d.reject(a.data)})},logout:function(){c.remove("token"),i={}},createUser:function(a,b){return g.save(a,function(d){return c.put("token",d.token),i=g.get(),h(b)(null,a)},function(a){return k.logout(),h(b)(a)}).$promise},changePassword:function(a,b,c){return g.changePassword({id:i.user._id},{oldPassword:a,newPassword:b},function(){return h(c)(null)},function(a){return h(c)(a)}).$promise},getCurrentUser:function(a){if(0===arguments.length)return i;var b=i.hasOwnProperty("$promise")?i.$promise:i;return d.when(b).then(function(b){return h(a)(b),b},function(){return h(a)({}),{}})},isLoggedIn:function(a){return 0===arguments.length?i.hasOwnProperty("user"):k.getCurrentUser(null).then(function(b){var c=b.hasOwnProperty("user");return h(a)(c),c})},hasRole:function l(a,b){var l=function(a,b){return j.indexOf(a)>=j.indexOf(b)};return arguments.length<2?l(i.user.role,a):k.getCurrentUser(null).then(function(c){var d=c.hasOwnProperty("role")?l(c.role,a):!1;return h(b)(d),d})},isAdmin:function(){return k.hasRole.apply(k,[].concat.apply(["admin"],arguments))},getToken:function(){return c.get("token")}};return k}a.$inject=["$location","$http","$cookies","$q","appConfig","Util","User"],angular.module("littleplaceApp.auth").factory("Auth",a)}();var _createClass=function(){function a(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}();!function(){var a=function(){function a(b){_classCallCheck(this,a),this.users=b.query()}return a.$inject=["User"],_createClass(a,[{key:"delete",value:function(a){a.$remove(),this.users.splice(this.users.indexOf(a),1)}}]),a}();angular.module("littleplaceApp.admin").controller("AdminController",a)}(),angular.module("littleplaceApp").config(["$stateProvider",function(a){a.state("login",{url:"/login",templateUrl:"app/account/login/login.html",controller:"LoginController",controllerAs:"vm"}).state("logout",{url:"/logout?referrer",referrer:"home",template:"",controller:["$state","Auth",function(a,b){var c=a.params.referrer||a.current.referrer||"home";b.logout(),a.go(c)}]}).state("signup",{url:"/signup",templateUrl:"app/account/signup/signup.html",controller:"SignupController",controllerAs:"vm"}).state("settings",{url:"/settings",templateUrl:"app/account/settings/settings.html",controller:"SettingsController",controllerAs:"vm",authenticate:!0})}]).run(["$rootScope",function(a){a.$on("$stateChangeStart",function(a,b,c,d){"logout"===b.name&&d&&d.name&&!d.authenticate&&(b.referrer=d.name)})}]),angular.module("littleplaceApp.admin").config(["$stateProvider",function(a){a.state("admin",{url:"/admin",templateUrl:"app/admin/admin.html",controller:"AdminController",controllerAs:"admin",authenticate:"admin"})}]),function(a,b){a.module("littleplaceApp.constants",[]).constant("appConfig",{userRoles:["guest","user","admin"]})}(angular),angular.module("littleplaceApp").factory("friendService",["$http",function(a){function b(a,b,c,d){var e=d.map(function(d){return d.isMe=d._id===a._id,d.isFollowingMe=c.some(function(a){return a.feed_id.indexOf(d._id)>0}),d.imFollowing=b.some(function(a){return a.target_id.indexOf(d._id)>0}),d});return e}return{follow:function(b,c){return a.post("api/users/follow",{user:b,friend:c})},unFollow:function(b,c){return a.post("api/users/unfollow",{user:b,friend:c})},friendList:function(c,d,e){return a.get("api/users").then(function(a){return b(c,d,e,a.data)})}}}]),angular.module("littleplaceApp").controller("FriendsCtrl",["$scope","$http","Auth","friendService","geolocation","reviewService",function(a,b,c,d,e,f){a.follow=function(b){a.rowIsLoading=!0,a.currentUser.friends.push(b),d.follow(a.currentUser,b).then(function(b){a.getUserData()})},a.unFollow=function(b){a.rowIsLoading=!0,a.currentUser.friends=a.currentUser.friends.reduce(function(a,c){return b._id!==c&&a.push(c),a},[]),d.unFollow(a.currentUser,b).then(function(b){a.getUserData()})},a.addReview=function(b){var c={placeName:b.googlePlace.name,rating:b.googlePlace.rating,phone:b.googlePlace.formatted_phone_number,address:b.googlePlace.formatted_address,location:{type:"Point",coordinates:[b.googlePlace.geometry.location.lng(),b.googlePlace.geometry.location.lat()]},thumbs:b.thumb,comments:b.comments,user:a.currentUser._id};f.save(c).then(function(b){console.log("save post response:",b.statusCode),a.getUserData()})},a.getUserData=function(){b.get("api/users/me").then(function(b){return a.currentUser=b.data.user,d.friendList(b.data.user,b.data.following.results,b.data.followers.results)}).then(function(c){return a.users=c,b.get("api/reviews")}).then(function(b){a.reviews=b.data,a.rowIsLoading=!1})},a.autocompleteOptions={},a.googlePlace={},a.mapOptions={backgroundColor:"#10ade4",styles:[{featureType:"administrative",elementType:"labels.text.fill",stylers:[{color:"#444444"}]},{featureType:"landscape",elementType:"all",stylers:[{color:"#DCE3E4"}]},{featureType:"landscape",elementType:"labels.text",stylers:[{visibility:"on"},{hue:"#485659"}]},{featureType:"poi",elementType:"all",stylers:[{visibility:"off"}]},{featureType:"road",elementType:"all",stylers:[{saturation:-100},{lightness:45}]},{featureType:"road.highway",elementType:"all",stylers:[{visibility:"simplified"}]},{featureType:"road.arterial",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"transit",elementType:"all",stylers:[{visibility:"off"}]},{featureType:"water",elementType:"all",stylers:[{color:"#2C5A71"},{visibility:"on"}]}]},e.getLocation().then(function(b){a.map={center:{latitude:b.coords.latitude,longitude:b.coords.longitude},zoom:14}}),a.getUserData()}]),angular.module("littleplaceApp").config(["$stateProvider",function(a){a.state("home",{url:"/home",templateUrl:"app/friends/friends.html",controller:"FriendsCtrl",authenticate:!0})}]),function(){var a=function b(a){_classCallCheck(this,b)};a.$inject=["$http"],angular.module("littleplaceApp").controller("MainController",a)}(),angular.module("littleplaceApp").config(["$stateProvider",function(a){a.state("main",{url:"/",templateUrl:"app/main/main.html",controller:"MainController",controllerAs:"main"})}]),angular.module("littleplaceApp").controller("ReviewCtrl",["$scope","$stateParams","$window","reviewService",function(a,b,c,d){a.reviewId=b.reviewId||0,a.back=function(a){c.history.back()},d.get(a.reviewId).then(function(b){a.review=b.data,a.map={center:{longitude:a.review.location.coordinates[0],latitude:a.review.location.coordinates[1]},zoom:17}})}]),angular.module("littleplaceApp").config(["$stateProvider",function(a){a.state("review",{url:"/review/:reviewId",templateUrl:"app/review/review.html",controller:"ReviewCtrl"})}]);var _createClass=function(){function a(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),SettingsController=function(){function a(b){_classCallCheck(this,a),this.errors={},this.submitted=!1,this.Auth=b}return a.$inject=["Auth"],_createClass(a,[{key:"changePassword",value:function(a){var b=this;this.submitted=!0,a.$valid&&this.Auth.changePassword(this.user.oldPassword,this.user.newPassword).then(function(){b.message="Password successfully changed."})["catch"](function(){a.password.$setValidity("mongoose",!1),b.errors.other="Incorrect password",b.message=""})}}]),a}();angular.module("littleplaceApp").controller("SettingsController",SettingsController);var _createClass=function(){function a(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),LoginController=function(){function a(b,c){_classCallCheck(this,a),this.user={email:"admin",password:"admin"},this.errors={},this.submitted=!1,this.Auth=b,this.$state=c}return a.$inject=["Auth","$state"],_createClass(a,[{key:"login",value:function(a){var b=this;this.submitted=!0,a.$valid&&this.Auth.login({email:this.user.email,password:this.user.password}).then(function(){b.$state.go("home")})["catch"](function(a){b.errors.other=a.message})}}]),a}();angular.module("littleplaceApp").controller("LoginController",LoginController),function(){function a(a,b,c,d,e){var f;return{request:function(a){return a.headers=a.headers||{},c.get("token")&&e.isSameOrigin(a.url)&&(a.headers.Authorization="Bearer "+c.get("token")),a},responseError:function(a){return 401===a.status&&((f||(f=d.get("$state"))).go("main"),c.remove("token")),b.reject(a)}}}a.$inject=["$rootScope","$q","$cookies","$injector","Util"],angular.module("littleplaceApp.auth").factory("authInterceptor",a)}(),function(){angular.module("littleplaceApp.auth").run(["$rootScope","$state","Auth",function(a,b,c){a.$on("$stateChangeStart",function(a,d){d.authenticate&&("string"==typeof d.authenticate?c.hasRole(d.authenticate,_.noop).then(function(d){return d?void 0:(a.preventDefault(),c.isLoggedIn(_.noop).then(function(a){b.go(a?"main":"login")}))}):c.isLoggedIn(_.noop).then(function(c){c||(a.preventDefault(),b.go("main"))}))})}])}(),function(){function a(a){return a("/api/users/:id/:controller",{id:"@_id"},{changePassword:{method:"PUT",params:{controller:"password"}},get:{method:"GET",params:{id:"me"}}})}a.$inject=["$resource"],angular.module("littleplaceApp.auth").factory("User",a)}(),angular.module("littleplaceApp").directive("footer",function(){return{templateUrl:"components/footer/footer.html",restrict:"E",link:function(a,b){b.addClass("footer")}}}),angular.module("littleplaceApp").factory("Modal",["$rootScope","$modal",function(a,b){function c(){var c=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],d=arguments.length<=1||void 0===arguments[1]?"modal-default":arguments[1],e=a.$new();return angular.extend(e,c),b.open({templateUrl:"components/modal/postform.html",windowClass:d,scope:e})}return{confirm:{"delete":function(){var a=arguments.length<=0||void 0===arguments[0]?angular.noop:arguments[0];return function(){var b,d=Array.prototype.slice.call(arguments),e=d.shift();b=c({modal:{dismissable:!0,title:"Confirm Delete",html:"<p>Are you sure you want to delete <strong>"+e+"</strong> ?</p>",buttons:[{classes:"btn-danger",text:"Delete",click:function(a){b.close(a)}},{classes:"btn-default",text:"Cancel",click:function(a){b.dismiss(a)}}]}},"modal-danger"),b.result.then(function(b){a.apply(b,d)})}},post:function(){var a=arguments.length<=0||void 0===arguments[0]?angular.noop:arguments[0];return function(){var b,d=Array.prototype.slice.call(arguments),e=(d.shift(),{});b=c({modal:{dismissable:!0,title:"Add a review!",formData:e,buttons:[{classes:"btn-success",text:"Post",click:function(a){b.close(a)}},{classes:"btn-default",text:"Cancel",click:function(a){b.dismiss(a)}}]}},"modal-success"),b.result.then(function(b){a.apply(b,[e])})}}}}}]),angular.module("littleplaceApp").directive("mongooseError",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){b.on("keydown",function(){return d.$setValidity("mongoose",!0)})}}});var NavbarController=function a(b){_classCallCheck(this,a),this.menu=[{title:"Main",state:"main"}],this.isCollapsed=!0,this.isLoggedIn=b.isLoggedIn,this.isAdmin=b.isAdmin,this.getCurrentUser=b.getCurrentUser};NavbarController.$inject=["Auth"],angular.module("littleplaceApp").controller("NavbarController",NavbarController),angular.module("littleplaceApp").directive("navbar",function(){return{templateUrl:"components/navbar/navbar.html",restrict:"E",controller:"NavbarController",controllerAs:"nav"}}),angular.module("littleplaceApp").controller("OauthButtonsCtrl",["$window",function(a){this.loginOauth=function(b){a.location.href="/auth/"+b}}]),angular.module("littleplaceApp").directive("oauthButtons",function(){return{templateUrl:"components/oauth-buttons/oauth-buttons.html",restrict:"EA",controller:"OauthButtonsCtrl",controllerAs:"OauthButtons",scope:{classes:"@"}}});var PostModalController=function b(a,c){_classCallCheck(this,b),this.openModal=a.confirm.post(function(a){c.save(a).then(function(a){console.log("save post response:",a.statusCode)})})};PostModalController.$inject=["Modal","reviewService"],angular.module("littleplaceApp").controller("postModalController",PostModalController),angular.module("littleplaceApp").directive("reviewbutton",function(){return{restrict:"EA",template:'<button class="btn btn-large btn-success", ng-click="postModal.openModal()">Add a Review!</button>',controller:"postModalController",controllerAs:"postModal"}}),angular.module("littleplaceApp").service("reviewService",["$http",function(a){var b="/api/reviews";return{save:function(c){return a.post(b+"/",c)},list:function(){return a.get(b+"/")},get:function(c){return a.get(b+"/"+c)}}}]);var _createClass=function(){function a(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),SignupController=function(){function a(b,c){_classCallCheck(this,a),this.user={},this.errors={},this.submitted=!1,this.Auth=b,this.$state=c}return a.$inject=["Auth","$state"],_createClass(a,[{key:"register",value:function(a){var b=this;this.submitted=!0,a.$valid&&this.Auth.createUser({name:this.user.name,email:this.user.email,password:this.user.password}).then(function(){b.$state.go("main")})["catch"](function(c){c=c.data,b.errors={},angular.forEach(c.errors,function(c,d){a[d].$setValidity("mongoose",!1),b.errors[d]=c.message})})}}]),a}();angular.module("littleplaceApp").controller("SignupController",SignupController),function(){function a(a){var b={safeCb:function(a){return angular.isFunction(a)?a:angular.noop},urlParse:function(a){var b=document.createElement("a");return b.href=a,""===b.host&&(b.href=b.href),b},isSameOrigin:function(c,d){return c=b.urlParse(c),d=d&&[].concat(d)||[],d=d.map(b.urlParse),d.push(a.location),d=d.filter(function(a){return c.hostname===a.hostname&&c.port===a.port&&c.protocol===a.protocol}),d.length>=1}};return b}a.$inject=["$window"],angular.module("littleplaceApp.util").factory("Util",a)}(),angular.module("littleplaceApp").run(["$templateCache",function(a){a.put("app/account/login/login.html",'<navbar></navbar><div class=container><div class=row><div class=col-sm-12><h1>Login</h1><p>Accounts are reset on server restart from<code>server/config/seed.js</code>. Default account is<code>test@example.com</code>/<code>test</code></p><p>Admin account is<code>admin@example.com</code>/<code>admin</code></p></div><div class=col-sm-12><form name=form ng-submit=vm.login(form) novalidate class=form><div class=form-group><label>Email</label><input name=email ng-model=vm.user.email value=admin class="form-control"></div><div class=form-group><label>Password</label><input type=password name=password ng-model=vm.user.password value=admin class="form-control"></div><div class="form-group has-error"><p ng-show="form.email.$error.required &amp;&amp; form.password.$error.required &amp;&amp; vm.submitted" class=help-block>Please enter your email and password.</p><p class=help-block>{{ vm.errors.other }}</p></div><div><button type=submit class="btn btn-inverse btn-lg btn-login">Login</button> <a ui-sref=signup class="btn btn-default btn-lg btn-register">Register</a></div><hr><div class=row><div class="col-sm-4 col-md-3"><oauth-buttons classes=btn-block></oauth-buttons></div></div></form></div></div><hr></div>'),a.put("app/account/settings/settings.html",'<navbar></navbar><div class=container><div class=row><div class=col-sm-12><h1>Change Password</h1></div><div class=col-sm-12><form name=form ng-submit=vm.changePassword(form) novalidate class=form><div class=form-group><label>Current Password</label><input type=password name=password ng-model=vm.user.oldPassword mongoose-error="" class="form-control"><p ng-show=form.password.$error.mongoose class=help-block>{{ vm.errors.other }}</p></div><div class=form-group><label>New Password</label><input type=password name=newPassword ng-model=vm.user.newPassword ng-minlength=3 required class="form-control"><p ng-show="(form.newPassword.$error.minlength || form.newPassword.$error.required) &amp;&amp; (form.newPassword.$dirty || vm.submitted)" class=help-block>Password must be at least 3 characters.</p></div><div class=form-group><label>Confirm New Password</label><input type=password name=confirmPassword ng-model=vm.user.confirmPassword match=vm.user.newPassword ng-minlength=3 required class="form-control"><p ng-show="fvm.orm.confirmPassword.$error.match &amp;&amp; vm.submitted" class=help-block>Passwords must match.</p></div><p class=help-block>{{ vm.message }}</p><button type=submit class="btn btn-lg btn-primary">Save changes</button></form></div></div></div>'),a.put("app/account/signup/signup.html",'<navbar></navbar><div class=container><div class=row><div class=col-sm-12><h1>Sign up</h1></div><div class=col-sm-12><form name=form ng-submit=vm.register(form) novalidate class=form><div ng-class="{ &quot;has-success&quot;: form.name.$valid &amp;&amp; vm.submitted,        &quot;has-error&quot;: form.name.$invalid &amp;&amp; vm.submitted }" class=form-group><label>Name</label><input name=name ng-model=vm.user.name required class="form-control"><p ng-show="form.name.$error.required &amp;&amp; vm.submitted" class=help-block>A name is required</p></div><div ng-class="{ &quot;has-success&quot;: form.email.$valid &amp;&amp; vm.submitted,        &quot;has-error&quot;: form.email.$invalid &amp;&amp; vm.submitted }" class=form-group><label>Email</label><input type=email name=email ng-model=vm.user.email required mongoose-error="" class="form-control"><p ng-show="form.email.$error.email &amp;&amp; vm.submitted" class=help-block>Doesn\'t look like a valid email.</p><p ng-show="form.email.$error.required &amp;&amp; vm.submitted" class=help-block>What\'s your email address?</p><p ng-show=form.email.$error.mongoose class=help-block>{{ vm.errors.email }}</p></div><div ng-class="{ &quot;has-success&quot;: form.password.$valid &amp;&amp; vm.submitted,        &quot;has-error&quot;: form.password.$invalid &amp;&amp; vm.submitted }" class=form-group><label>Password</label><input type=password name=password ng-model=vm.user.password mongoose-error="" ng-minlength=3 required class="form-control"><p ng-show="(form.password.$error.minlength || form.password.$error.required) &amp;&amp; vm.submitted" class=help-block>Password must be at least 3 characters.</p><p ng-show=form.password.$error.mongoose class=help-block>{{ vm.errors.password }}</p></div><div ng-class="{ &quot;has-success&quot;: form.confirmPassword.$valid &amp;&amp; vm.submitted,        &quot;has-error&quot;: form.confirmPassword.$invalid &amp;&amp; vm.submitted }" class=form-group><label>Confirm Password</label><input type=password name=confirmPassword ng-model=vm.user.confirmPassword match=vm.user.password ng-minlength=3 required class="form-control"><p ng-show="form.confirmPassword.$error.match &amp;&amp; vm.submitted" class=help-block>Passwords must match.</p></div><div><button type=submit class="btn btn-inverse btn-lg btn-register">Sign up</button> <a ui-sref=login class="btn btn-default btn-lg btn-login">Login</a></div><hr><div class=row><div class="col-sm-4 col-md-3"><oauth-buttons classes=btn-block></oauth-buttons></div></div></form></div></div><hr></div>'),a.put("app/admin/admin.html",'<navbar></navbar><div class=container><p>The delete user and user index api routes are restricted to users with the \'admin\' role.</p><ul class=list-group><li ng-repeat="user in admin.users" class=list-group-item><strong>{{user.name}}</strong><br><span class=text-muted>{{user.email}}</span><a ng-click=admin.delete(user) class=trash><span class="glyphicon glyphicon-trash pull-right"></span></a></li></ul></div>'),a.put("app/friends/friends.html",'<navbar></navbar><div class=container><div class="col-md-8 col-md-offset-2"><uib-tabset><uib-tab heading=Map><ui-gmap-google-map center=map.center zoom=map.zoom options=mapOptions><ui-gmap-marker ng-repeat="activity in reviews" idkey=activity._id coords="{longitude: activity.location.coordinates[0], latitude: activity.location.coordinates[1]}"></ui-gmap-marker></ui-gmap-google-map><ul class="list-unstyled feed"><a ng-repeat="activity in reviews" ng-href=/review/{{activity._id}}><li><span ng-class="{\'glyphicon-thumbs-up\': activity.thumbs === \'up\', \'glyphicon-thumbs-down\': activity.thumbs === \'down\'}" class="glyphicon pull-right"></span><span ng-bind-html=activity.placeName></span></li></a></ul></uib-tab><uib-tab heading="Add Review"><form name=reviewForm class="form reviewForm"><div class=form-group><label>Search</label><input ng-model=reviewForm.googlePlace g-places-autocomplete=g-places-autocomplete forceselection=forceSelection options=autocompleteOptions class="form-control"></div><div ng-show=reviewForm.googlePlace.name class=placard><div class=form-group><p class=h4>{{reviewForm.googlePlace.name}}</p><p>{{reviewForm.googlePlace.formatted_phone_number}}</p><p><span>{{reviewForm.googlePlace.address_components[0].short_name}} {{reviewForm.googlePlace.address_components[1].short_name}}</span><br><span>{{reviewForm.googlePlace.address_components[2].short_name}}, {{reviewForm.googlePlace.address_components[3].short_name}}</span></p></div><div ng-show=reviewForm.googlePlace.name class="well well-sm"><div class=form-group><div><label>Rating</label></div><div class=btn-group><label ng-model=reviewForm.thumb uib-btn-radio="\'up\'" uncheckable=uncheckable class="btn btn-primary"><span class="glyphicon glyphicon-thumbs-up"></span></label><label ng-model=reviewForm.thumb uib-btn-radio="\'down\'" uncheckable=uncheckable class="btn btn-primary"><span class="glyphicon glyphicon-thumbs-down"></span></label></div></div><div ng-show=reviewForm.googlePlace.name class=form-group><label>Comments</label><textarea type=text rows=2 ng-model=reviewForm.comments class=form-control></textarea></div><div ng-show=reviewForm.googlePlace.name class=form-group><button ng-click=addReview(reviewForm) class="btn btn-block btn-success">Save</button></div></div></div></form></uib-tab><uib-tab heading=People><div class=userBox><img ng-src="{{currentUser.google.image.url}}"><span class=name>{{currentUser.google.displayName}}</span></div><p ng-show=rowIsLoading>loading...</p><table ng-show=!rowIsLoading class="table text-center"><thead><tr><th class=text-center>Name</th><th class=text-center>Following me</th><th class=text-center></th></tr></thead><tbody><tr ng-repeat="user in users | filter: {isMe: false}"><td><p>{{user.name}}</p></td><td><span ng-class="{\'glyphicon-ok\': user.isFollowingMe}" class=glyphicon></span></td><td><button ng-if=!user.imFollowing ng-click=follow(user) class="btn btn-success"><span>+ follow</span></button><button ng-if=user.imFollowing ng-click=unFollow(user) class="btn btn-danger"><span>&times; unfollow</span></button></td></tr></tbody></table></uib-tab></uib-tabset></div></div>'),a.put("app/main/main.html",'<navbar></navbar><header id=banner class=hero-unit><div class=container><h1>Roberr</h1><p class=lead>social intelligence</p></div></header><div class=container><div class=row><div class="col-md-offset-4 col-md-4"><div class=well><oauth-buttons classes=btn-block></oauth-buttons></div></div></div></div><footer></footer>'),a.put("app/review/review.html",'<navbar></navbar><div class=container><div class="col-md-8 col-md-offset-2"><div class=backbutton><button ng-click=back() class="btn btn-primary"><span class="glyphicon glyphicon-chevron-left"></span>Back</button></div><div class=placard><ui-gmap-google-map center=map.center zoom=map.zoom options=mapOptions><ui-gmap-marker idkey=review._id coords="{longitude: review.location.coordinates[0], latitude: review.location.coordinates[1]}"></ui-gmap-marker></ui-gmap-google-map><p class=h4>{{review.placeName}}</p><p>{{review.phone}}</p><p><span>{{review.address}}</span></p></div><div class=placard><ul class=list-inline><li><span ng-class="{\'glyphicon-thumbs-up\': review.thumbs === \'up\', \'glyphicon-thumbs-down\': review.thumbs === \'down\'}" class="glyphicon pull-right"></span></li><li>{{review.comments}}</li></ul></div></div></div>'),a.put("components/footer/footer.html",'<div class=container><p>Angular Fullstack v3.3.0-beta.0 | <a href=https://twitter.com/tyhenkel>@tyhenkel</a> | <a href="https://github.com/DaftMonk/generator-angular-fullstack/issues?state=open">Issues</a></p></div>'),a.put("components/modal/modal.html",'<div class=modal-header><button ng-if=modal.dismissable type=button ng-click=$dismiss() class=close>&times;</button><h4 ng-if=modal.title ng-bind=modal.title class=modal-title></h4></div><div class=modal-body><p ng-if=modal.text ng-bind=modal.text></p><div ng-if=modal.html ng-bind-html=modal.html></div></div><div class=modal-footer><button ng-repeat="button in modal.buttons" ng-class=button.classes ng-click=button.click($event) ng-bind=button.text class=btn></button></div>'),a.put("components/modal/postform.html",'<div class=modal-header><button ng-if=modal.dismissable type=button ng-click=$dismiss() class=close>&times;</button><h4 ng-if=modal.title ng-bind=modal.title class=modal-title></h4></div><div class=modal-body><form name=formData class=form><div class=form-group><label>Place</label><input ng-model=modal.formData.place class="form-control"></div><div class=form-group><label>Rating</label><rating max=5 ng-model=modal.formData.rating></rating></div><div class=form-group><label>Review</label><textarea type=text rows=3 ng-model=modal.formData.review class=form-control></textarea></div></form></div><div class=modal-footer><button ng-repeat="button in modal.buttons" ng-class=button.classes ng-click=button.click($event) ng-bind=button.text class=btn></button></div>'),a.put("components/navbar/navbar.html",'<div ng-controller=NavbarController class="navbar navbar-default navbar-static-top"><div class=container><div class=navbar-header><button type=button ng-click="nav.isCollapsed = !nav.isCollapsed" class=navbar-toggle><span class=sr-only>Toggle navigation</span><span class=icon-bar></span><span class=icon-bar></span><span class=icon-bar></span></button><a href="/" class=navbar-brand>littlePlace</a></div><div id=navbar-main uib-collapse=nav.isCollapsed class="navbar-collapse collapse"><ul class="nav navbar-nav"><li ng-show=nav.isLoggedIn() ui-sref-active=active><a ui-sref=home>Home</a></li></ul><ul class="nav navbar-nav navbar-right"><li ng-show=nav.isLoggedIn() ui-sref-active=active><a ui-sref=settings><span class="glyphicon glyphicon-cog"></span></a></li><li ng-show=nav.isLoggedIn()><a ui-sref=logout>Logout</a></li></ul></div></div></div>'),a.put("components/oauth-buttons/oauth-buttons.html",'<a ng-class=classes ng-click=OauthButtons.loginOauth(&quot;google&quot;) class="btn btn-social btn-google"><i class="fa fa-google-plus"></i> Connect with Google+</a>')}]);