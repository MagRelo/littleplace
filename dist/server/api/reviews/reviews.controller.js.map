{"version":3,"sources":["../../../../server/api/reviews/reviews.controller.js"],"names":[],"mappings":"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","file":"reviews.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/reviewss              ->  index\n * POST    /api/reviewss              ->  create\n * GET     /api/reviewss/:id          ->  show\n * PUT     /api/reviewss/:id          ->  update\n * DELETE  /api/reviewss/:id          ->  destroy\n */\n\n'use strict';\n\nimport _ from 'lodash';\nimport Reviews from './reviews.model';\nimport mongoose from 'mongoose';\n\n\nvar stream = require('getstream');\n// Instantiate a new client (server side)\nvar client = stream.connect('3d9sxz5ev2sh', 'qmjx4f8yhn9ksv9v7g89jeyapygvu5bnt678rf8eqxnvtvt9dk5j4t2m7s3fpsfy', '9030');\n\n\n// Gets a list of Reviews\nexport function index(req, res) {\n\n  const streamUserFeed = client.feed('user', req.user._id);\n\n  streamUserFeed.get({limit:50, offset: 0})\n    .then(function (streamUserFeedResults) {\n\n      const reviewIds = streamUserFeedResults.results.map(function(activity) {\n        return mongoose.Types.ObjectId(activity.object)\n      })\n\n      return Reviews.findAsync({_id: {$in: reviewIds}}).populateAsync('user')\n    })\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Reviews in the DB\nexport function create(req, res) {\n  Reviews.createAsync(req.body)\n    .then(function (doc) {\n\n      const activityTitle = '<span><span class=\"placeName\">'\n        + doc.placeName\n        + '</span><span class=\"userName\">'\n        + req.user.name\n        + '</span></span>'\n\n\n      const activity = {\n        \"verb\": \"createReview\",\n        \"title\": activityTitle,\n        \"actor\": \"User:\" + req.user._id,\n        \"object\": doc._id,\n        \"foreign_id\": req.user._id\n      };\n\n      // Instantiate stream.io user feed\n      const streamUserFeed = client.feed('user', req.user._id);\n\n      // Add activity\n      return streamUserFeed.addActivity(activity)\n    })\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n\n// Gets a single Reviews from the DB\nexport function show(req, res) {\n  Reviews.findByIdAsync(req.params.id)\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n\n// Updates an existing Reviews in the DB\nexport function update(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  Reviews.findByIdAsync(req.params.id)\n    .then(handleEntityNotFound(res))\n    .then(saveUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Reviews from the DB\nexport function destroy(req, res) {\n  Reviews.findByIdAsync(req.params.id)\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n\n\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction saveUpdates(updates) {\n  return function(entity) {\n    var updated = _.merge(entity, updates);\n    return updated.saveAsync()\n      .spread(updated => {\n        return updated;\n      });\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if (entity) {\n      return entity.removeAsync()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n"]}