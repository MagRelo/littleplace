{"version":3,"sources":["../../../../server/api/reviews/reviews.model.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;AAEb,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;;AAErE,IAAI,aAAa,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC;AACtC,WAAS,EAAE,MAAM;AACjB,QAAM,EAAE,MAAM;AACd,OAAK,EAAE,MAAM;AACb,SAAO,EAAE,MAAM;AACf,UAAQ,EAAE;AACR,QAAI,EAAG,EAAE,IAAI,EAAE,MAAM,EAAE,WAAS,OAAO,EAAE;AACzC,eAAW,EAAE,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAC,CAAC;GAChC;AACD,QAAM,EAAE,MAAM;AACd,UAAQ,EAAE,MAAM;AAChB,MAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE;CAC5D,CAAC,CAAC;;qBAEY,QAAQ,CAAC,KAAK,CAAC,SAAS,EAAE,aAAa,CAAC","file":"reviews.model.js","sourcesContent":["'use strict';\n\nvar mongoose = require('bluebird').promisifyAll(require('mongoose'));\n\nvar ReviewsSchema = new mongoose.Schema({\n  placeName: String,\n  rating: String,\n  phone: String,\n  address: String,\n  location: {\n    type : { type: String, default: \"Point\" },\n    coordinates: [{type: \"Number\"}]\n  },\n  thumbs: String,\n  comments: String,\n  user: { type: mongoose.Schema.Types.ObjectId, ref: 'User' }\n});\n\nexport default mongoose.model('Reviews', ReviewsSchema);\n"]}